# Generated by Django 5.1 on 2024-12-26 14:47

import django.contrib.auth.validators
import django.utils.timezone
import meus_lares.storages
import soft_components.managers
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("cpf", models.CharField(max_length=11)),
                (
                    "username",
                    models.CharField(
                        max_length=25,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("phone_number", models.CharField(max_length=15)),
                ("full_name", models.CharField(max_length=255)),
                ("birth", models.DateField()),
                (
                    "profile_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        storage=meus_lares.storages.PublicMediaStorage(),
                        upload_to="users/profile_photo/",
                    ),
                ),
                (
                    "identity_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        storage=meus_lares.storages.PrivateMediaStorage(),
                        upload_to="users/identity_photo/",
                    ),
                ),
                (
                    "document_photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        storage=meus_lares.storages.PrivateMediaStorage(),
                        upload_to="users/document_photo/",
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("history", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
            },
            managers=[
                ("objects", soft_components.managers.SoftUserManager()),
            ],
        ),
    ]
